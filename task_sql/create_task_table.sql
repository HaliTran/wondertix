
-- How to add task and task_notes tables to exising DB:
	-- log in with:
	-- psql -U postgres
	-- make sure you're using the correct db:
	-- \c <YOUR WONDERTIX DB>
	-- then run:
	-- \i /Path/to/create_task_table.sql

-- NOTE: The Postgres wiki recommends a new feature to declare id, used in the 2 tables below, as preferable to the serial type. Details here:
-- https://www.2ndquadrant.com/en/blog/postgresql-10-identity-columns/

-- This updates a change in the donations table, if it hasn't already been done:
DO $$
BEGIN
  IF EXISTS(SELECT *
    FROM information_schema.columns
    WHERE table_name='donations' and column_name='donationid')
  THEN
      ALTER TABLE public.donations RENAME COLUMN donationid TO id;
  END IF;
END;
$$;

-- Note that the state type is enumerated, so you can use the < > operators. 
-- For example 'SELECT * WHERE state > not_started' will return everything that's in_progress or completed.  
--create types
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'state') THEN
		CREATE TYPE state AS ENUM('not_started', 'in_progress', 'completed');
    END IF;
END;
$$;

CREATE TABLE IF NOT EXISTS public.task (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	parent_id int,
	subject varchar,
	description varchar,
	status state,
	assign_to int,
	report_to int,
	date_created timestamptz,
	date_assigned timestamptz,
	due_date timestamptz,
	rel_contact int,
	rel_donation int,
	rel_ticket_order int,
	rel_account int -- account table does not exist yet.
);

DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_constraint WHERE conname = 'task_fk0') THEN
		ALTER TABLE public.task ADD CONSTRAINT task_fk0 FOREIGN KEY (parent_id) REFERENCES public.task(id);
    END IF;
    IF NOT EXISTS (SELECT 1 FROM pg_constraint WHERE conname = 'task_fk1') THEN
		ALTER TABLE public.task ADD CONSTRAINT task_fk1 FOREIGN KEY (assign_to) REFERENCES public.users(id);
    END IF;
    IF NOT EXISTS (SELECT 1 FROM pg_constraint WHERE conname = 'task_fk2') THEN
		ALTER TABLE public.task ADD CONSTRAINT task_fk2 FOREIGN KEY (report_to) REFERENCES public.users(id);
    END IF;
    IF NOT EXISTS (SELECT 1 FROM pg_constraint WHERE conname = 'task_fk3') THEN
		ALTER TABLE public.task ADD CONSTRAINT task_fk3 FOREIGN KEY (rel_contact) REFERENCES public.customers(id);
    END IF;
    IF NOT EXISTS (SELECT 1 FROM pg_constraint WHERE conname = 'task_fk4') THEN
		ALTER TABLE public.task ADD CONSTRAINT task_fk4 FOREIGN KEY (rel_donation) REFERENCES public.donations(id);
    END IF;
    IF NOT EXISTS (SELECT 1 FROM pg_constraint WHERE conname = 'task_fk5') THEN
		ALTER TABLE public.task ADD CONSTRAINT task_fk5 FOREIGN KEY (rel_ticket_order) REFERENCES public.reservation(transno);
    END IF;
 -- NOTE: account table does not exist yet. 
/*
    IF NOT EXISTS (SELECT 1 FROM pg_constraint WHERE conname = 'task_fk6') THEN
      ALTER TABLE public.task ADD CONSTRAINT task_fk6 FOREIGN KEY (rel_account) REFERENCES accounts(id);
*/
END;
$$;

CREATE TABLE IF NOT EXISTS public.task_notes (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    task_id int,
	notes varchar,
    date_created timestamptz
    );

DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_constraint WHERE conname = 'task_notes_fk0') THEN
		ALTER TABLE public.task_notes ADD CONSTRAINT task_notes_fk0 FOREIGN KEY (task_id) REFERENCES public.task(id);
    END IF;
END;
$$;

-- Before you can import the data, you need to make sure to have users with ids 0-3 in the DB, or the import will fail due to the foreign key constraint on the task.rel_contact.

INSERT INTO public.users
    VALUES (0,'brian',DEFAULT,''), (1,'hailey',DEFAULT,''), (2,'aiyana',DEFAULT,''), (3,'allen',DEFAULT,'')
    ON CONFLICT (id) DO NOTHING; 
